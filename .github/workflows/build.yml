name: Build FeralFile App for ARM64

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Application version'
        required: true
        default: '0.0.1'

jobs:
  build:
    name: Build and Package App
    runs-on: ['self-hosted', 'ARM64']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies for C code
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build libbluetooth-dev \
          libgtk-3-dev libblkid-dev liblzma-dev libsecret-1-dev libjsoncpp-dev
          
          # Verify installations
          g++ --version
          cmake --version
          ninja --version
          pkg-config --modversion gtk+-3.0

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build C library
        run: |
          cd feralfile-bluetooth
          make clean
          make
          # Copy to the correct location for Flutter to find it
          mkdir -p ../build/linux/arm64/release/bundle/lib/
          cp libbluetooth_service.so ../build/linux/arm64/release/bundle/lib/
          cd ..

      - name: Build Flutter app for Linux
        run: |
          flutter config --enable-linux-desktop
          flutter build linux --release --target-platform=linux-arm64

      - name: Verify build artifacts
        run: |
          ls -l build/linux/arm64/release/bundle/
          ls -l build/linux/arm64/release/bundle/lib/
          file build/linux/arm64/release/bundle/lib/libbluetooth_service.so

      - name: Package as Debian .deb
        env:
          APP_NAME: feralfile-launcher
          VERSION: ${{ github.event.inputs.version }}
          ARCH: arm64
          DESCRIPTION: "Feral File Connection Assistant"
          MAINTAINER: "Bitmark Inc <support@feralfile.com>"
          INSTALL_DIR: "/opt/${{ env.APP_NAME }}"
        run: |
          # Create package directory structure
          mkdir -p package/DEBIAN
          mkdir -p package$INSTALL_DIR/lib
          
          # Copy Flutter app and C library
          cp -r build/linux/arm64/release/bundle/* package$INSTALL_DIR/
          cp feralfile-bluetooth/libbluetooth_service.so package$INSTALL_DIR/lib/
          
          # Create control file with package metadata
          cat <<EOF > package/DEBIAN/control
          Package: $APP_NAME
          Version: $VERSION
          Section: base
          Priority: optional
          Architecture: arm64
          Maintainer: $MAINTAINER
          Description: $DESCRIPTION
          EOF
          
          # Set permissions
          chmod -R 755 package$INSTALL_DIR
          
          # Build the .deb package
          dpkg-deb --build package ${APP_NAME}_${VERSION}_arm64.deb
          
          # The .deb file will be named feralfile_1.0.0_arm64.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v3
        with:
          name: feralfile-launcher-deb
          path: feralfile-launcher_*.deb
