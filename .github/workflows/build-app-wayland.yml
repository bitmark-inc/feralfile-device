name: Build FeralFile App for ARM64 (Wayland)

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
        description: 'Application version'
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: 'Application version'

jobs:
  build:
    name: Build and Package App (Wayland)
    runs-on: ['self-hosted', 'ARM64']
    defaults:
      run:
        working-directory: launcher-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            libbluetooth-dev \
            libwayland-dev \
            wayland-protocols \
            libgtk-3-dev \
            libatk1.0-dev \
            libglib2.0-dev \
            libpango1.0-dev \
            libcairo2-dev \
            libblkid-dev \
            liblzma-dev \
            libsecret-1-dev \
            libjsoncpp-dev \
            libxkbcommon-dev \
            libdbus-1-dev \
            libdbus-glib-1-dev \
            bluetooth \
            bluez \
            bluez-tools
          
          # Set pkg-config path
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig:/usr/share/pkgconfig
          
          # Verify Wayland installation
          echo "Checking Wayland version:"
          pkg-config --modversion wayland-client
          echo "Checking GTK version:"
          pkg-config --modversion gtk+-3.0

      - name: Get Flutter dependencies
        run: |
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig:/usr/share/pkgconfig
          flutter pub get

      - name: Build C library
        run: |
          cd feralfile-bluetooth
          make clean
          make
          mkdir -p ../build/linux/arm64/release/bundle/lib/
          cp libbluetooth_service.so ../build/linux/arm64/release/bundle/lib/
          cd ..

      - name: Configure Wayland environment
        run: |
          # Set Wayland-specific environment variables
          export WAYLAND_DISPLAY=wayland-0
          export GDK_BACKEND=wayland
          export CLUTTER_BACKEND=wayland
          export QT_QPA_PLATFORM=wayland
          # Set pkg-config path
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig:/usr/share/pkgconfig

      - name: Build Flutter app for Linux
        run: |
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig:/usr/share/pkgconfig
          export GDK_BACKEND=wayland
          flutter config --enable-linux-desktop
          flutter build linux --release --target-platform=linux-arm64

      - name: Package as Debian .deb
        env:
          APP_NAME: feralfile-launcher-wayland
          VERSION: ${{ inputs.version }}
          ARCH: arm64
          DESCRIPTION: "Feral File Connection Assistant (Wayland)"
          MAINTAINER: "Bitmark Inc <support@feralfile.com>"
          INSTALL_DIR: "/opt/feralfile"
        run: |
          mkdir -p package/DEBIAN
          mkdir -p package$INSTALL_DIR/lib
          cp -r build/linux/arm64/release/bundle/* package$INSTALL_DIR/
          cp feralfile-bluetooth/libbluetooth_service.so package$INSTALL_DIR/lib/
          
          cat <<EOF > package/DEBIAN/control
          Package: $APP_NAME
          Version: $VERSION
          Section: base
          Priority: optional
          Architecture: arm64
          Depends: libwayland-client0, libwayland-cursor0, libwayland-egl1
          Maintainer: $MAINTAINER
          Description: $DESCRIPTION
          EOF
          
          chmod -R 755 package$INSTALL_DIR
          dpkg-deb --build package ${APP_NAME}_${VERSION}_arm64.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v3
        with:
          name: feralfile-launcher-wayland-deb
          path: launcher-app/feralfile-launcher-wayland_*.deb 